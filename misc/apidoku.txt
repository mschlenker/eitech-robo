
/get/

Get all settings, WLAN mode and pin modes, use /write to write current settings as flash settings to SPI memory!

Example: 

curl -v http://10.76.23.155/get

{  "currentSettings" : {
"version" : "20190809-1045 ", 
"isAp" : 0,
 "accessPoint" : [ "eitech-robo", "123456789012345678901234567890123456789012345678901234567890123" ],
 "infraClient" : [ "pinguinbaendiger", "8831769357215102" ],
 "maxVoltage" : [ 0, 0, 0, 0, 0 ],
 "motorInvert" : [ 0, 0, 0, 0 ],
 "servoInvert" : [ 0, 0 ],
 "pinMode" : [ 0, 0, 0, 0, 0, 3, 3 ] }
, 
 "flashSettings" : {
"version" : "20190809-1045 ", 
"isAp" : 0,
 "accessPoint" : [ "eitech-robo", "123456789012345678901234567890123456789012345678901234567890123" ],
 "infraClient" : [ "pinguinbaendiger", "8831769357215102" ],
 "maxVoltage" : [ 0, 0, 0, 0, 0 ],
 "motorInvert" : [ 0, 0, 0, 0 ],
 "servoInvert" : [ 0, 0 ],
 "pinMode" : [ 0, 0, 0, 0, 0, 3, 3 ] }
, 
 "defaultSettings" : {
"version" : "20190809-1045 ", 
"isAp" : 1,
 "accessPoint" : [ "eitech-robo", "123456789012345678901234567890123456789012345678901234567890123" ],
 "infraClient" : [ "1234567890123456789012345678901", "123456789012345678901234567890123456789012345678901234567890123" ],
 "maxVoltage" : [ 0, 0, 0, 0, 0 ],
 "motorInvert" : [ 0, 0, 0, 0 ],
 "servoInvert" : [ 0, 0 ],
 "pinMode" : [ 0, 0, 0, 0, 0, 3, 3 ] }
, 
"mac" : "f8:f0:5:a9:cd:eb", "signal" : -64, "addr" : "10.76.23.155", "fwInstalled" : "19.5.4", "fwExpected" : "19.5.4",
 "vbat" : 4.79 }

/stop/

Stop everything!

Example: 

curl -v http://10.76.23.155/stop

{ "stopped" : 1, 
 "vbat" : 4.78 }

/test

Switch to testmode

/demo/<rotateTime>/<obstacleDistance>/<slideTime>

Switches to autonomous demo mode

Microswitches that are NC configured must be connected to J1 (right side) and J3 (left side), microswitch connects IO and GND, and HC-SR04 to UART. RotateTime is milliseconds to rotate when the vehicle frontally approaches an obstacle. ObstacleDistance is the value in microseconds sound travels forth and back to the sensor. 3000µs means approx. 50cm distance, max 20000µs. Slide time is milliseconds to rotate when microswitches detect the obstacle has been hit. Typically you want to set rotate time to 1500-3000ms to rotate about 90deg, obstacle distance to 2000-4000µs (33-67cm) and slide to 500-1500ms (10-30deg, since only one side is moved).

Example (with default values):

curl -v http://10.76.23.155/demo/2000/3000/1000

/getwifi

List all WIFI networks in your neighborhood and show the current connection:

{ "networks" : [  { "ssid" : "pinguinbaendiger" , 
 "signal" : -61 , 
 "enctype" : 2 },
  { "ssid" : "parkdeckV2.4" , 
 "signal" : -84 , 
 "enctype" : 2 },
  { "ssid" : "dc_XjP1jujH" , 
 "signal" : -90 , 
 "enctype" : 2 },
  { "ssid" : "24-7ACAB" , 
 "signal" : -90 , 
 "enctype" : 2 },
  { "ssid" : "WLAN-10F332" , 
 "signal" : -70 , 
 "enctype" : 2 },
  { "ssid" : "DIRECT-0D-HP OfficeJet 6950" , 
 "signal" : -92 , 
 "enctype" : 2 },
  { "ssid" : "DIRECT-5E-HP OfficeJet Pro 8710" , 
 "signal" : -91 , 
 "enctype" : 2 },
  { "ssid" : "" , 
 "signal" : -45 , 
 "enctype" : 1 },
  { "ssid" : "Buero" , 
 "signal" : -88 , 
 "enctype" : 2 },
  { "ssid" : "" , 
 "signal" : -87 , 
 "enctype" : 2 },
  { "ssid" : "DIRECT-R2BC-TS5000series" , 
 "signal" : -87 , 
 "enctype" : 2 },
  { "ssid" : "wwu_gast" , 
 "signal" : -86 , 
 "enctype" : 2 }
  ] ,
 "isap" : 0, "ssid" : "pinguinbaendiger", "mac" : "f8:f0:5:a9:cd:eb", "signal" : -59, "addr" : "115523.76.", "fwInstalled" : "19.5.4", "fwExpected" : "19.5.4", 
 "vbat" : 4.78 }

# TODO: Fix address as in /get

/wificonnect/<SSID>/<PSK>

Connects to a certain WIFI network. 

curl -v http://10.76.23.155/wificonnect/pinguinbaendiger/12345678901234567890

Closes the connection!

/hostname/<new-hostname>

Sets the MDNS hostname that is also used as accesspoint name

/switchnet

curl -v http://10.76.23.155/switchnet

Switches between AP and infrastructure mode (or vice versa). Same can be acomplished by pressing the SW button for about 7 seconds. 

/write

Writes settings to the SPI memory, used implicitly when setting network parameters, use manually in all other settings.

/timeout

curl -v http://10.76.23.155/timeout/1000

Set the timeout (max time between two HTTP requests). Default is 500ms. If requests are slower, all motors will stop, S1 will be set to 0. Servos will move to neutral. Set timeout to 0 to disable completely.

TODO: Store timeout

/getdistance

Get the distance of an HC-SR04 connected to the UART (TX > Trig, RX > Echo). Timeout specified in microseconds. 10000 microseconds can be used to detect objects approx. 1.7m or closer. The answer ist the raw value in microseconds the sound travelled from the sensor to the object and back. Depending on air pressure and temperature sound typically travels about 320 to 355m/s in air. Here the object detected is in about 2m distance.

curl -v http://10.76.23.155/getdistance/10000

{  "obstacleDistance" : 11932,
 "vbat" : 4.79 }
 
/setmotor

Set the speeds of all four motors, values from -255 to 255 are accepted. Remember that the current defaults allow no PWM on M2!

curl -v http://10.76.23.155/setmotor/-180/255/60/-80

{ "maxvoltages" : [ 
0, 0, 0, 0, 0, 
], "motorspeeds" : [ 
-180, 255, 60, -80, 0, 
] }

/setswitch 

Set S1 PWM from 0 to 255. Only positive values allowed.

curl -v http://10.76.23.155/setswitch/127

{ "maxvoltages" : [ 
0, 0, 0, 0, 0, 
], "motorspeeds" : [ 
0, 0, 0, 0, 127, 
] }

/setservo

Set both servos to a certain angle. Values from 0 to 180 are accepted. Remember that many servos have a real range of about 270°. First parameter is the servo to use (0: J7, 1: J6, 2: J5), second the angle:

curl -v http://10.76.23.155/setservo/0/60/

/setmode

Set pinmodes for J1 to J7. Default 0 is output, 1 is INPUT, omitted trailing pins will be left in current state. Reset board when making changes to servo setup! 
  // Pin modes are
  // 0: output
  // 1: input - also use for DHT22 on J2!
  // 2: input_pullup - for interrupt, J7 only
  // 3: servo - currently only pin J5 to J7 - changes need reset!

Example:

curl -v http://10.76.23.155/setmode/0/1/0/1/0/3/3

/getanalog

Read analog values on a single pin that is configured as analog input. Values range from 0 to 1023. Reference is the internal 3.3V. Not 5V!

curl -v http://10.76.23.155/getanalog/J4

{ "analogValue" : -1, "pinName" : "j4" ,
 "vbat" : 4.78 }

Returns -1 if the pin is not configured as input:

{ "analogValue" : -1, "pinName" : "j4" ,
 "vbat" : 4.78 }

/setmax

Set maximum voltages for M1 to M2 resp. S1. Voltages is calculated relative to input voltage. If input voltage is lower than max voltage, the setting has no effect. Set to zero to disable. Unit is tenths of a volt.

Example:

curl -v http://10.76.23.155/setmax/m1/90

{ "maxvoltages" : [ 
90, 0, 0, 0, 0, 
], "motorspeeds" : [ 
0, 0, 0, 0, 0, 
] }

/getrpm

Get the RPM of a tachometer or anemometer connected to J7. The pin is configured as INPUT_PULLUP. If more than 25 interrupts occur within 10 seconds the RPM is calculated every 1 seconds, if less or equal than 25 ints, the time frame is 30 seconds. Debounce in hardware.

curl -v http://10.76.23.155/getrpm

{ "rpm" : 0 ,
 "vbat" : 4.79 }

/getdht

Read a DHT22 connected to J2. Remember that each DHT22 has to be calibrated individually and DHT22 has a limited range. So you usually want to use a NTC to make wider, more precise measurings. 

curl -v http://10.76.23.155/getdht

{ "dhterror" : false, "temperature" : 27.30 , "humidity" : 30.50 ,
 "vbat" : 4.81 }

In case of error, no temperature or humidity values are returned, so check for "dhterror" first!

{ "dhterror" : true ,
 "vbat" : 4.79 }
